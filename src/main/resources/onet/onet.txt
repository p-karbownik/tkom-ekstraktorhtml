resource resA
{
	tag = a;
		
	export to class = "example.AClass";
	
	set fields
	{
		field href = from(self).attribute[href];
	}
	
	amount = 0;
}

resource liRes0
{
	tag = li;
	
	export to class = "example.LiOnetClass";
	
	set fields
	{
		field style = from(self).attribute[style];
		field aClass = from(tag[a]).resource[resA];
	}
	
	amount = every;
}

resource liRes1
{
	tag = li;
	
	export to class = "example.LiOnetClass";
	
	set fields
	{
		field style = from(self).attribute[style];
		field aClass = from(tag[a]).resource[resA];
	}
	
	amount = 4;
}

resource liRes2
{
	tag = li;
	
	export to class = "example.LiOnetClass";
	
	set fields
	{
		field style = from(self).attribute[style];
		field aClass = from(tag[a]).resource[resA];
	}
	
	range = (2, 6);
}

resource liRes3
{
	tag = li;
	
	export to class = "example.LiOnetClass";
	
	set fields
	{
		field style = from(self).attribute[style];
		field aClass = from(tag[a]).resource[resA];
	}
	
	range = (3, 3);
}

resource headRes
{
    tag = head;

    conditions
    {
        if parent has tag html and (child has tag link or child has tag body);
    }
    export to class = "example.HeadClass";

    set fields
    {
        field meta0 = from(tag[meta]).attribute[content];
        field meta1 = from(tag[meta][1]).attribute[content];
        field meta2 = from(tag[meta][2]).attribute[content];
    }

    amount = every;
}

resource divRes
{
    tag = div;

    conditions
    {
        if descendant has attribute class == "backToMainPageButton";
        if child has attribute class == "Phx__content";
    }

    export to class = "example.DivRes";

    set fields
    {
        field divClass0 = from(tag[div].tag[div]).attribute[class];
        field divClass1 = from(tag[div][1].tag[div]).attribute[class];
        field divClass2 = from(tag[div][1].tag[div][1]).attribute[class];
    }

    amount = every;
}

resource divRes1
{
    tag = div;

    conditions
    {
        if child.child has attribute id == "mainPageBody0";
    }

    export to class = "example.DivRes";

    set fields
    {
        field divClass0 = from(self).attribute[class];
    }

    amount = every;
}